
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AceiteTermosScalarFieldEnum = {
  id: 'id',
  termoUrl: 'termoUrl',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cpfCnpj: 'cpfCnpj',
  whatsapp: 'whatsapp',
  email: 'email',
  password: 'password',
  userType: 'userType',
  dataNascimento: 'dataNascimento',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status',
  periodoMandatoInicio: 'periodoMandatoInicio',
  periodoMandatoFim: 'periodoMandatoFim',
  subsindicoInfo: 'subsindicoInfo',
  nomeFantasia: 'nomeFantasia',
  razaoSocial: 'razaoSocial',
  cep: 'cep',
  endereco: 'endereco',
  cidade: 'cidade',
  uf: 'uf'
};

exports.Prisma.ImovelScalarFieldEnum = {
  id: 'id',
  cep: 'cep',
  endereco: 'endereco',
  cidade: 'cidade',
  uf: 'uf',
  quantidade_moradias: 'quantidade_moradias',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  gestorId: 'gestorId'
};

exports.Prisma.AreasComunsScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  imovelId: 'imovelId'
};

exports.Prisma.AtivoScalarFieldEnum = {
  id: 'id',
  assetCode: 'assetCode',
  descricaoAtivo: 'descricaoAtivo',
  localInstalacao: 'localInstalacao',
  marca: 'marca',
  modelo: 'modelo',
  dataInstalacao: 'dataInstalacao',
  valorCompra: 'valorCompra',
  garantia: 'garantia',
  garantiaValidade: 'garantiaValidade',
  contratoManutencao: 'contratoManutencao',
  contratoValidade: 'contratoValidade',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  imovelId: 'imovelId'
};

exports.Prisma.ChamadoScalarFieldEnum = {
  id: 'id',
  numeroChamado: 'numeroChamado',
  descricaoOcorrido: 'descricaoOcorrido',
  informacoesAdicionais: 'informacoesAdicionais',
  prioridade: 'prioridade',
  escopo: 'escopo',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  imovelId: 'imovelId',
  ativoId: 'ativoId',
  solicitanteId: 'solicitanteId',
  assignedProviderId: 'assignedProviderId'
};

exports.Prisma.AnexoScalarFieldEnum = {
  id: 'id',
  url: 'url',
  title: 'title',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  chamadoId: 'chamadoId',
  ativoId: 'ativoId',
  areasComunsId: 'areasComunsId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserType = exports.$Enums.UserType = {
  SINDICO_RESIDENTE: 'SINDICO_RESIDENTE',
  SINDICO_PROFISSIONAL: 'SINDICO_PROFISSIONAL',
  ADMIN_IMOVEIS: 'ADMIN_IMOVEIS',
  PRESTADOR: 'PRESTADOR',
  ADMIN_PLATAFORMA: 'ADMIN_PLATAFORMA'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  ATIVO: 'ATIVO',
  INATIVO: 'INATIVO',
  BLOQUEADO: 'BLOQUEADO',
  PENDENTE: 'PENDENTE',
  FALTA_DOCUMENTOS: 'FALTA_DOCUMENTOS'
};

exports.Prioridade = exports.$Enums.Prioridade = {
  BAIXA: 'BAIXA',
  MEDIA: 'MEDIA',
  ALTA: 'ALTA'
};

exports.Escopo = exports.$Enums.Escopo = {
  ORCAMENTO: 'ORCAMENTO',
  SERVICO_IMEDIATO: 'SERVICO_IMEDIATO'
};

exports.ChamadoStatus = exports.$Enums.ChamadoStatus = {
  NOVO: 'NOVO',
  A_CAMINHO: 'A_CAMINHO',
  EM_ATENDIMENTO: 'EM_ATENDIMENTO',
  CONCLUIDO: 'CONCLUIDO'
};

exports.Prisma.ModelName = {
  AceiteTermos: 'AceiteTermos',
  User: 'User',
  Imovel: 'Imovel',
  AreasComuns: 'AreasComuns',
  Ativo: 'Ativo',
  Chamado: 'Chamado',
  Anexo: 'Anexo'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
